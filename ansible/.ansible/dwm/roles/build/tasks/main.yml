---
# tasks/main.yml

- name: Build and install forked gits
  block:
    - community.general.make:
        target: install
        chdir: '{{ ansible_user_dir }}/Documents/dev/fork/{{ item.origin | basename }}'
      when: item.origin | basename != 'slock'
      with_items: '{{ forked_gits }}'
    - community.general.make:
        target: install
        chdir: '{{ ansible_user_dir }}/Documents/dev/fork/{{ item.origin | basename }}'
      become: yes
      when: item.origin | basename == 'slock'
      with_items: '{{ forked_gits }}'

- name: Build and install cloned gits
  block:
    - name: Make build system
      community.general.make:
        target: install
        chdir: '{{ ansible_user_dir }}/Documents/dev/clone/{{ item | basename }}'
        params:
          PREFIX: ~/.local
      with_items: '{{ cloned_gits_make }}'
      when: item | basename != 'ytdl-mpv'
      ignore_errors: yes
    - name: Make ytdl-mpv
      community.general.make:
        target: install
        chdir: '{{ ansible_user_dir }}/Documents/dev/{{ item | basename }}'
        params:
          PREFIX: ~/.local
      with_items: '{{ cloned_gits_make }}'
      when: item | basename == 'ytdl-mpv'
    - name: Meson build system
      ansible.builtin.shell: |
        cd '{{ ansible_user_dir }}/Documents/dev/clone/{{ item | basename }}'
        rm -fr build/
        meson setup build --prefix '~/.local'
        meson compile -C build
        meson install -C build
      with_items: '{{ cloned_gits_meson }}'
    - name: Automake ctags
      ansible.builtin.shell: |
        cd '{{ ansible_user_dir }}/Documents/dev/clone/{{ ctags_git | basename }}'
        ./autogen.sh
        ./configure --prefix=$HOME/.local
        make install
    - name: Install distrobox
      ansible.builtin.shell: |
        cd '{{ ansible_user_dir }}/Documents/dev/clone/{{ distrobox_git | basename }}'
        ./install
