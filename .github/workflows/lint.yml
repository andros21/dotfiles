---
name: Lint CI

"on":
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  changes:
    name: Filter changes
    runs-on: ubuntu-latest
    outputs:
      scripts: ${{ steps.filter.outputs.scripts }}
      playbooks: ${{ steps.filter.outputs.playbooks }}
    steps:
      - name: checkout project
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
        id: filter
        with:
          filters: |
            scripts:
              - '**/.local/bin/*'
            playbooks:
              - 'ansible/.ansible/**'
  lint-shell:
    name: Lint scripts
    needs: changes
    if: ${{ needs.changes.outputs.scripts == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Shellcheck scripts
        run: |
          find * -type f -executable -exec shellcheck {} \;
  lint-playbook:
    name: Lint playbooks
    needs: changes
    if: ${{ needs.changes.outputs.playbooks == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Setup some envs
        run: |
          echo "HOME=$HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV
          echo "ansible_dwm=ansible/.ansible/dwm/" >> $GITHUB_ENV
      - name: Check requirements-dev.txt cache
        uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0
        id: cache-txt
        with:
          path: |
            ~/.local/bin
            ~/.local/lib
          key: |
            ${{ runner.os }}-ansible-${{ hashFiles('**/requirements-dev.txt') }}
      - name: Install requirements-dev.txt
        if: steps.cache-txt.outputs.cache-hit != 'true'
        run: |
          cd $ansible_dwm
          python -m pip install -r requirements-dev.txt
      - name: Check ansible version
        run: |
          ansible --version
          ansible-lint --version
      - name: Check requirements.yml cache
        uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0
        id: cache-yml
        with:
          path: |
            ~/.ansible/collections
          key: |
            ${{ runner.os }}-ansible-${{ hashFiles('**/requirements.yml') }}
      - name: Install requirements.yml
        if: steps.cache-yml.outputs.cache-hit != 'true'
        run: |
          cd $ansible_dwm
          ansible-galaxy collection install -r requirements.yml
      - name: Run yaml-lint
        run: |
          cd $ansible_dwm
          yamllint .
      - name: Run playbook syntax-check
        run: |
          cd $ansible_dwm
          ansible-playbook --syntax-check dwm.yml
          ansible-playbook --syntax-check update.yml
      - name: Run ansible-lint
        run: |
          cd $ansible_dwm
          ansible-lint --offline dwm.yml
          ansible-lint --offline update.yml
